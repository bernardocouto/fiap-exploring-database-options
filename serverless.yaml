app: fiap-exploring-database-options

custom:
  pyIndividually:
    dockerizedPip: true

functions:
  convert-csv-json:
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - smallFilesCsv
              - Arn
    handler: convert-csv-json/lambda_function.lambda_handler
    layers:

    memorySize: 128
    name: convert-csv-json
    package:
      include:
        - convert-csv-json/**
  read-from-raw-to-sqs:
    events:
      - s3:
        bucket: raw-json
        event: s3:ObjectCreated:*
        existing: true
        rules:
          - suffix: .json
    handler: read-from-raw-to-sqs/lambda_function.lambda_handler
    memorySize: 128
    name: read-from-raw-to-sqs
    package:
      include:
        - read-from-raw-to-sqs/**
  read-from-small-to-sqs:
    events:
      - s3:
        bucket: small-files
        event: s3:ObjectCreated:*
        existing: true
        rules:
          - suffix: .csv
    handler: read-from-small-to-sqs/lambda_function.lambda_handler
    memorySize: 128
    name: read-from-small-to-sqs
    package:
      include:
        - read-from-small-to-sqs/**
  send-raw-json-to-firehose:
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - rawJsonToFirehose
              - Arn
    handler: send-raw-json-to-firehose/lambda_function.lambda_handler
    memorySize: 128
    name: send-raw-json-to-firehose
    package:
      include:
        - send-raw-json-to-firehose/**

package:
  exclude:
    - .editorconfig
    - .github/**
    - node_modules/**
    - sample/**
    - venv/**
    - README.md
  excludeDevDependencies: false
  individually: true

plugins:
  - serverless-plugin-create-deployment-bucket
  - serverless-plugin-existing-s3
  - serverless-python-individually

provider:
  deploymentBucket:
    blockPublicAccess: true
    name: fiap-exploring-database-options-serverless
    serverSideEncryption: AES256
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "firehose:*"
        - "kinesis:*"
        - "s3:*"
        - "sqs:*"
      Resource: "*"
  lambdaHashingVersion: 20201221
  name: aws
  region: us-east-2
  runtime: python3.8
  s3:
    small-files:
      name: small-files
  timeout: 30
  tracing:
    lambda: true

resources:
  Resources:
    firehoseIngestJson:
      Properties:
        DeliveryStreamName: firehose-ingest-json
        DeliveryStreamType: DirectPut
        S3DestinationConfiguration:
          BucketARN:
            Fn::GetAtt:
              - ingestedJson
              - Arn
          BufferingHints:
            IntervalInSeconds: 300
            SizeInMBs: 100
          RoleARN:
            Fn::GetAtt:
              - firehoseIngestJsonRole
              - Arn
      Type: AWS::KinesisFirehose::DeliveryStream
    firehoseIngestJsonPolicy:
      Properties:
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - s3:*
              Resource:
                - '*'
          Roles:
            - !Ref firehoseIngestJsonRole
          Version: '2012-10-17'
        PolicyName: firehose-ingest-json
      Type: AWS::IAM::Policy
    firehoseIngestJsonRole:
      Properties:
        AssumeRolePolicyDocument:
          Statement:
            - Sid: ''
              Action: sts:AssumeRole
              Effect: Allow
              Principal:
                Service: firehose.amazonaws.com
          Version: '2012-10-17'
      Type: AWS::IAM::Role
    ingestedJson:
      Properties:
        BucketName: fiap-exploring-database-options-ingested-json
      Type: AWS::S3::Bucket
    rawJson:
      Properties:
        BucketName: fiap-exploring-database-options-raw-json
      Type: AWS::S3::Bucket
    rawJsonToFirehose:
      Properties:
        QueueName: raw-json-to-firehose
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - rawJsonToFirehoseDlq
              - Arn
          maxReceiveCount: 5
      Type: AWS::SQS::Queue
    rawJsonToFirehoseDlq:
      Properties:
        QueueName: raw-json-to-firehose-dlq
      Type: AWS::SQS::Queue
    smallFiles:
      Properties:
        BucketName: fiap-exploring-database-options-small-files
      Type: AWS::S3::Bucket
    smallFilesCsv:
      Properties:
        QueueName: small-files-csv
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - smallFilesCsvDlq
              - Arn
          maxReceiveCount: 5
      Type: AWS::SQS::Queue
    smallFilesCsvDlq:
      Properties:
        QueueName: small-files-csv-dlq
      Type: AWS::SQS::Queue

service: fiap-exploring-database-options
